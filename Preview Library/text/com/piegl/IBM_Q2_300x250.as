package com.piegl{    import flash.display.*;	import com.greensock.TweenMax;	import com.greensock.easing.*;    public class IBM_Q2_300x250 extends MovieClip    {        public var logo:MovieClip;        public var anim:MovieClip;        public var cover:MovieClip;        public var fr1:MovieClip;        public var fr2:MovieClip;        public var cta:MovieClip;        public var lets:MovieClip;        private var _stageW:uint = 300;        private var _stageH:uint = 250;        private var _loop:uint = 0;        private var _maxLoop:uint = 2;        private var _maxItem:uint = 7;        private var _maxFrame:uint = 2;        private var _rot:uint;        private var _maxRot:uint = 4;        public function IBM_Q2_300x250() : void        {            //addChild(new StandardClickTag(this._stageW, this._stageH));            i = 1;            while (i <= this._maxFrame)            {                                this["fr" + i].visible = false;                var _loc_2:* = i + 1;                i = _loc_2;            }            this.init();            return;        }// end function        private function init() : void        {            var _loc_2:uint = 0;            var _loc_3:MovieClip = null;            var _loc_4:MovieClip = null;            var _loc_1:uint = 80;            this._rot = 0;            _loc_2 = 1;            while (_loc_2 <= this._maxItem)            {                                _loc_3 = this.anim["c" + _loc_2];                _loc_4 = this.fr1["c" + _loc_2];                TweenMax.to(_loc_3, 0, {alpha:0, x:_loc_4.x, y:_loc_4.y, scaleX:_loc_4.scaleX, scaleY:_loc_4.scaleY});                _loc_2 = _loc_2 + 1;            }            this.anim.face1.alpha = 0;            this.anim.face2.alpha = 0;            TweenMax.to(this.anim.p1, 0, {alpha:0, rotationX:109, colorMatrixFilter:{brightness:-0.5}});            TweenMax.to(this.anim.p2, 0, {alpha:0, rotationX:-83, colorMatrixFilter:{brightness:1.5}});            TweenMax.to(this.anim.p3, 0, {alpha:0, rotationX:85, colorMatrixFilter:{brightness:-0.5}});            TweenMax.to(this.lets, 0, {alpha:0, x:this._stageW - _loc_1});            TweenMax.to(this.logo, 0, {alpha:0, y:-_loc_1});            TweenMax.to(this.cta, 0, {alpha:0, x:this._stageW + _loc_1, colorMatrixFilter:{brightness:2.5}});            this.playBanner();            return;        }// end function        private function playBanner() : void        {            var _loc_1:Number = 2;            var _loc_2:* = Elastic.easeOut;            var _loc_3:Array = [1, 0.8];            var _loc_4:* = Sine.easeOut;            var _loc_5:Number = 0.5;			var _loc_6:* = _loc_5 + _loc_1 * 0.4;            TweenMax.to(this.cover, _loc_5, {alpha:0});            TweenMax.to(this.anim.p1, _loc_1, {rotationX:0, colorMatrixFilter:{brightness:1}, ease:_loc_2, easeParams:_loc_3, delay:_loc_5});            TweenMax.to(this.anim.p1, _loc_1 * 0.3, {alpha:1, ease:_loc_4, delay:_loc_5, overwrite:false});                        _loc_5 = _loc_5 + _loc_1 * 0.4;            TweenMax.to(this.anim.p2, _loc_1, {rotationX:0, colorMatrixFilter:{brightness:1}, ease:_loc_2, easeParams:_loc_3, delay:_loc_6});            TweenMax.to(this.anim.p2, _loc_1 * 0.3, {alpha:1, ease:_loc_4, delay:_loc_5, overwrite:false});            //var _loc_6:* = _loc_5 + _loc_1 * 0.4;            _loc_5 = _loc_5 + _loc_1 * 0.4;            TweenMax.to(this.anim.p3, _loc_1, {rotationX:0, colorMatrixFilter:{brightness:1}, ease:_loc_2, easeParams:_loc_3, delay:_loc_6});            TweenMax.to(this.anim.p3, _loc_1 * 0.3, {alpha:1, ease:_loc_4, delay:_loc_5, overwrite:false});           // var _loc_6:* = _loc_5 + _loc_1 * 1.1;            _loc_5 = _loc_5 + _loc_1 * 1.1;            TweenMax.delayedCall(_loc_6, this.rotateCube);            return;        }// end function        private function rotateCube() : void        {            var _loc_1:Array = [16777215, 16489216, 16502322, 16485160];            var _loc_2:Number = 0.45;            if (this._rot < this._maxRot)            {                this.anim.p3.alpha = 0;                TweenMax.to(this.anim.face1, 0, {tint:_loc_1[this._rot]});                var _loc_3:String = this;                var _loc_4:* = this._rot + 1;               // _loc_3._rot = _loc_4;                if (this._rot < this._maxRot)                {                    TweenMax.to(this.anim.face2, 0, {tint:_loc_1[this._rot]});                }                else                {                    TweenMax.to(this.anim.face2, 0, {removeTint:true});                }                TweenMax.to(this.anim.face1, 0, {alpha:1, y:161, rotationX:0, colorMatrixFilter:{brightness:1}});                TweenMax.to(this.anim.face2, 0, {alpha:0, y:171, z:100, rotationX:-90, colorMatrixFilter:{brightness:2}});                TweenMax.to(this.anim.face1, _loc_2, {alpha:0, ease:Linear.easeNone, colorMatrixFilter:{brightness:0}, overwrite:false});                TweenMax.to(this.anim.face2, _loc_2, {alpha:1, ease:Linear.easeNone, colorMatrixFilter:{brightness:1}, overwrite:false});                TweenMax.to(this.anim.face1, _loc_2, {y:226, rotationX:70, ease:Sine.easeOut, overwrite:false});                TweenMax.to(this.anim.face2, _loc_2, {y:161, z:0, rotationX:0, ease:Sine.easeIn, overwrite:false});                TweenMax.delayedCall(_loc_2 + 0.55, this.rotateCube);            }            else            {                TweenMax.delayedCall(_loc_2 - 0.2, this.playEndframe);            }            return;        }// end function        private function playEndframe() : void        {            var _loc_4:MovieClip = null;            var _loc_5:MovieClip = null;            this.anim.p1.alpha = 0;            this.anim.p2.alpha = 0;            this.anim.face1.alpha = 0;            this.anim.face2.alpha = 0;            i = 1;            while (i <= this._maxItem)            {                                _loc_4 = this.anim["c" + i];                _loc_5 = this.fr1["c" + i];                TweenMax.to(_loc_4, 0, {alpha:1, x:_loc_5.x, y:_loc_5.y, scaleX:_loc_5.scaleX, scaleY:_loc_5.scaleY});                var _loc_7:* = i + 1;                i = _loc_7;            }            var _loc_1:* = 0.5;            var _loc_2:* = 0;            i = 1;            while (i <= this._maxItem)            {                                _loc_4 = this.anim["c" + i];                _loc_5 = this.fr2["c" + i];                TweenMax.to(_loc_4, _loc_1, {x:_loc_5.x, y:_loc_5.y, scaleX:_loc_5.scaleX, scaleY:_loc_5.scaleY, ease:Quad.easeInOut, delay:_loc_2, overwrite:false});                //var _loc_7:* = i + 1;                i = _loc_7;            }            _loc_2 = _loc_2 + _loc_1;            ease = Back.easeOut;            var _loc_3:Array = [1];            TweenMax.to(this.lets, _loc_1, {alpha:1, x:this._stageW, ease:ease, easeParams:_loc_3, delay:_loc_2});            TweenMax.to(this.logo, _loc_1, {alpha:1, y:0, ease:ease, easeParams:_loc_3, delay:_loc_2});            //var _loc_6:* = _loc_2 + 0.3;            _loc_2 = _loc_2 + 0.3;            TweenMax.to(this.cta, _loc_1 * 1.2, {alpha:1, x:this._stageW, ease:ease, easeParams:_loc_3, delay:_loc_6});            TweenMax.to(this.cta, _loc_1 * 1.6, {colorMatrixFilter:{brightness:1}, ease:Sine.easeInOut, delay:_loc_2, overwrite:false});            //var _loc_6:* = _loc_2 + (_loc_1 * 1.6 + 1.4);            _loc_2 = _loc_2 + (_loc_1 * 1.6 + 1.4);            TweenMax.to(this.cta, _loc_1 * 0.6, {x:this._stageW - 4, colorMatrixFilter:{brightness:2}, ease:Sine.easeOut, delay:_loc_6, overwrite:false});            //var _loc_6:* = _loc_2 + _loc_1 * 0.6;            _loc_2 = _loc_2 + _loc_1 * 0.6;            TweenMax.to(this.cta, _loc_1 * 0.8, {x:this._stageW, colorMatrixFilter:{brightness:1}, ease:Expo.easeOut, delay:_loc_6, overwrite:false});            var _loc_6:* = _loc_2 + 4;            _loc_2 = _loc_2 + 4;            TweenMax.delayedCall(_loc_6, this.loopBanner);            return;        }// end function        private function loopBanner() : void        {            var _loc_1:* = 1;            var _loc_2:String = this;          //  _loc_2._loop = this._loop + 1;            if (++this._loop < this._maxLoop || this._maxLoop == 0)            {                TweenMax.to(this.cover, 0.6, {alpha:1, onComplete:this.init});            }            return;        }// end function    }}